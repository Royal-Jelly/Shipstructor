{
	//Designators
	// P = Solid Plate, . = Unconnected Tile, + = Trim Intersection
	// inner = Solid Plate Inner Corner, cap = Trim End Cap

	//Trim Connections (Indicate Where Connected)
	// D = Down, U = Up, R = Right, L = Left

	//Solid Plate Edges (Indicate Where On Plate)
	// N = North, S = South, E = East, W = West
	// NW = Northwest, NE = Northeast, SW = Southwest, SE = Southeast

	//Textures
	//Size [x, y]
	//Position [x, y]
	//colorStride [x, y]
	// Vector added to position to find the next paint color
	// Most tile templates use a value for the Y axis to determine this
	// Some Pleased Griraffe tile templates use X instead
	//variantStride [x, y]
	// Vector added to position to find the next variant of the block/matmod
	// Normally uses the opposite axis used by colorStride
	"pieces" : {
		//Horizontal
		"." : {
			"textureSize" : [8, 8],
			"texturePosition" : [56, 8],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"P/P" : {
			"textureSize" : [8, 8],
			"texturePosition" : [72, 0],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"P\\P" : {
			"textureSize" : [8, 8],
			"texturePosition" : [72, 8],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"P" : {
			"textureSize" : [8, 8],
			"texturePosition" : [8, 8],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"+" : {
			"textureSize" : [8, 8],
			"texturePosition" : [32, 8],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"innerNW" : {
			"textureSize" : [8, 8],
			"texturePosition" : [0, 24],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"innerNE" : {
			"textureSize" : [8, 8],
			"texturePosition" : [8, 24],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"innerSW" : {
			"textureSize" : [8, 8],
			"texturePosition" : [0, 32],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"innerSE" : {
			"textureSize" : [8, 8],
			"texturePosition" : [8, 32],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PNU" : {
			"textureSize" : [8, 8],
			"texturePosition" : [56, 0],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PER" : {
			"textureSize" : [8, 8],
			"texturePosition" : [64, 8],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PWL" : {
			"textureSize" : [8, 8],
			"texturePosition" : [48, 8],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PSD" : {
			"textureSize" : [8, 8],
			"texturePosition" : [56, 16],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PNWUL" : {
			"textureSize" : [8, 8],
			"texturePosition" : [48, 0],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PNEUR" : {
			"textureSize" : [8, 8],
			"texturePosition" : [64, 0],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PSWDL" : {
			"textureSize" : [8, 8],
			"texturePosition" : [48, 16],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PSEDR" : {
			"textureSize" : [8, 8],
			"texturePosition" : [64, 16],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"RL" : {
			"textureSize" : [8, 8],
			"texturePosition" : [56, 24],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"UD" : {
			"textureSize" : [8, 8],
			"texturePosition" : [72, 24],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"capD" : {
			"textureSize" : [8, 8],
			"texturePosition" : [72, 16],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"capU" : {
			"textureSize" : [8, 8],
			"texturePosition" : [72, 32],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"capL" : {
			"textureSize" : [8, 8],
			"texturePosition" : [64, 24],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"capR" : {
			"textureSize" : [8, 8],
			"texturePosition" : [48, 24],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PNW" : {
			"textureSize" : [8, 8],
			"texturePosition" : [0, 0],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"RD" : {
			"textureSize" : [8, 8],
			"texturePosition" : [24, 0],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PNE" : {
			"textureSize" : [8, 8],
			"texturePosition" : [16, 0],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"LD" : {
			"textureSize" : [8, 8],
			"texturePosition" : [40, 0],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PSW" : {
			"textureSize" : [8, 8],
			"texturePosition" : [0, 16],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"RU" : {
			"textureSize" : [8, 8],
			"texturePosition" : [24, 16],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PSE" : {
			"textureSize" : [8, 8],
			"texturePosition" : [16, 16],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"LU" : {
			"textureSize" : [8, 8],
			"texturePosition" : [40, 16],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PN" : {
			"textureSize" : [8, 8],
			"texturePosition" : [8, 0],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"LDR" : {
			"textureSize" : [8, 8],
			"texturePosition" : [32, 0],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PNER" : {
			"textureSize" : [8, 8],
			"texturePosition" : [40, 24],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PNWL" : {
			"textureSize" : [8, 8],
			"texturePosition" : [16, 24],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PW" : {
			"textureSize" : [8, 8],
			"texturePosition" : [0, 8],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"URD" : {
			"textureSize" : [8, 8],
			"texturePosition" : [24, 8],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PNWU" : {
			"textureSize" : [8, 8],
			"texturePosition" : [32, 24],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PSWD" : {
			"textureSize" : [8, 8],
			"texturePosition" : [16, 32],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PE" : {
			"textureSize" : [8, 8],
			"texturePosition" : [16, 8],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"ULD" : {
			"textureSize" : [8, 8],
			"texturePosition" : [40, 8],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PSED" : {
			"textureSize" : [8, 8],
			"texturePosition" : [40, 32],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PNEU" : {
			"textureSize" : [8, 8],
			"texturePosition" : [24, 24],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PS" : {
			"textureSize" : [8, 8],
			"texturePosition" : [8, 16],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"LUR" : {
			"textureSize" : [8, 8],
			"texturePosition" : [32, 16],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PSWL" : {
			"textureSize" : [8, 8],
			"texturePosition" : [32, 32],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		},
		"PSER" : {
			"textureSize" : [8, 8],
			"texturePosition" : [24, 32],
			"colorStride" : [0, 40],
			"variantStride" : [80, 0]
		}
	},
	
	//I don't know what this is yet
	"representativePiece": ".",
	
	//Attachment Rules(Very Very Very Tricky to use)
	"rules" : {
    "EqualsSelf" : {
      "entries" : [
        {
		  //"EqualsSelf is if a tile of the same ID is on selected Axis
          "type" : "EqualsSelf"
        }
      ]
    },
    "NotEqualsSelf" : {
      "entries" : [
        {
		  //inverse does the opposite of what the type is, so this one is if the tile up or down, left or right does not equal the ID of this one
          "type" : "EqualsSelf",
          "inverse" : true
        }
      ]
    },
    "Connects" : {
      "entries" : [
        {
		  //Don't know yet do not touch
          "type" : "Connects"
        }
      ]
    },
    "Empty" : {
      "entries" : [
        {
		  //Don't know yet do not touch
          "type" : "Connects",
          "inverse" : true
        }
      ]
    }
  },
  
    "matches" : [
		["main", [
			    {
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "NotEqualsSelf"],
					[[0, 1], "NotEqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["RL", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "NotEqualsSelf"],
					[[1, 0], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["UD", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					[[0, -1], "EqualsSelf"],
					[[0, 1], "NotEqualsSelf"],
					[[-1, 0], "NotEqualsSelf"],
					[[1, 0], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["capD", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					[[0, -1], "NotEqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "NotEqualsSelf"],
					[[1, 0], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["capU", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					[[0, -1], "NotEqualsSelf"],
					[[0, 1], "NotEqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["capL", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					[[0, -1], "NotEqualsSelf"],
					[[0, 1], "NotEqualsSelf"],
					[[-1, 0], "NotEqualsSelf"],
					[[1, 0], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["capR", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					[[0, -1], "NotEqualsSelf"],
					[[0, 1], "NotEqualsSelf"],
					[[-1, 0], "NotEqualsSelf"],
					[[1, 0], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [[".", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "EqualsSelf"],
					[[1, -1], "NotEqualsSelf"],
					[[-1, 1], "NotEqualsSelf"],
					[[-1, -1], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["P/P", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "NotEqualsSelf"],
					[[1, -1], "EqualsSelf"],
					[[-1, 1], "EqualsSelf"],
					[[-1, -1], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["P\\P", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "NotEqualsSelf"],
					[[1, -1], "EqualsSelf"],
					[[-1, 1], "NotEqualsSelf"],
					[[-1, -1], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PNWUL", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "NotEqualsSelf"],
					[[1, -1], "NotEqualsSelf"],
					[[-1, 1], "NotEqualsSelf"],
					[[-1, -1], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PNEUR", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "EqualsSelf"],
					[[1, -1], "NotEqualsSelf"],
					[[-1, 1], "NotEqualsSelf"],
					[[-1, -1], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PSWDL", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "NotEqualsSelf"],
					[[1, -1], "NotEqualsSelf"],
					[[-1, 1], "EqualsSelf"],
					[[-1, -1], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PSEDR", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "EqualsSelf"],
					[[1, -1], "EqualsSelf"],
					[[-1, 1], "EqualsSelf"],
					[[-1, -1], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["P", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "NotEqualsSelf"],
					[[1, -1], "NotEqualsSelf"],
					[[-1, 1], "NotEqualsSelf"],
					[[-1, -1], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["+", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "EqualsSelf"],
					[[1, -1], "NotEqualsSelf"],
					[[-1, 1], "EqualsSelf"],
					[[-1, -1], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["innerNW", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "EqualsSelf"],
					[[1, -1], "EqualsSelf"],
					[[-1, 1], "EqualsSelf"],
					[[-1, -1], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["innerNE", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "NotEqualsSelf"],
					[[1, -1], "EqualsSelf"],
					[[-1, 1], "EqualsSelf"],
					[[-1, -1], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["innerSW", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "EqualsSelf"],
					[[1, -1], "EqualsSelf"],
					[[-1, 1], "NotEqualsSelf"],
					[[-1, -1], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["innerSE", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "NotEqualsSelf"],
					[[1, -1], "EqualsSelf"],
					[[-1, 1], "NotEqualsSelf"],
					[[-1, -1], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PNU", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "NotEqualsSelf"],
					[[1, -1], "NotEqualsSelf"],
					[[-1, 1], "EqualsSelf"],
					[[-1, -1], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PER", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "EqualsSelf"],
					[[1, -1], "EqualsSelf"],
					[[-1, 1], "NotEqualsSelf"],
					[[-1, -1], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PWL", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "EqualsSelf"],
					[[1, -1], "NotEqualsSelf"],
					[[-1, 1], "EqualsSelf"],
					[[-1, -1], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PSD", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "EqualsSelf"],
					[[0, 1], "NotEqualsSelf"],
					[[-1, 0], "NotEqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, -1], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PNW", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "EqualsSelf"],
					[[0, 1], "NotEqualsSelf"],
					[[-1, 0], "NotEqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, -1], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["RD", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "EqualsSelf"],
					[[0, 1], "NotEqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "NotEqualsSelf"],
					[[-1, -1], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PNE", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "EqualsSelf"],
					[[0, 1], "NotEqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "NotEqualsSelf"],
					[[-1, -1], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["LD", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "NotEqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "NotEqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PSW", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "NotEqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "NotEqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["RU", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "NotEqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "NotEqualsSelf"],
					[[-1, 1], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PSE", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "NotEqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "NotEqualsSelf"],
					[[-1, 1], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["LU", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "EqualsSelf"],
					[[0, 1], "NotEqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, -1], "EqualsSelf"],
					[[-1, -1], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PN", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "EqualsSelf"],
					[[0, 1], "NotEqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, -1], "NotEqualsSelf"],
					[[-1, -1], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["LDR", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "EqualsSelf"],
					[[0, 1], "NotEqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, -1], "NotEqualsSelf"],
					[[-1, -1], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PNER", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "EqualsSelf"],
					[[0, 1], "NotEqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, -1], "EqualsSelf"],
					[[-1, -1], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PNWL", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "NotEqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "EqualsSelf"],
					[[1, -1], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PW", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "NotEqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "NotEqualsSelf"],
					[[1, -1], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["URD", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "NotEqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "NotEqualsSelf"],
					[[1, -1], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PNWU", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "NotEqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "EqualsSelf"],
					[[1, -1], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PSWD", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "NotEqualsSelf"],
					[[-1, 1], "EqualsSelf"],
					[[-1, -1], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PE", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "NotEqualsSelf"],
					[[-1, 1], "NotEqualsSelf"],
					[[-1, -1], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["ULD", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "NotEqualsSelf"],
					[[-1, 1], "EqualsSelf"],
					[[-1, -1], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PSED", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "EqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "NotEqualsSelf"],
					[[-1, 1], "NotEqualsSelf"],
					[[-1, -1], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PNEU", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "NotEqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "EqualsSelf"],
					[[-1, 1], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PS", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "NotEqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "NotEqualsSelf"],
					[[-1, 1], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["LUR", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "NotEqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "EqualsSelf"],
					[[-1, 1], "NotEqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PSWL", [0, 0]]]
				},
				{
				"matchAllPoints" : [
					//-1, 0 = Left, 1, 0 = Right, 0, -1 = Down, 0, 1 = Up
					[[0, -1], "NotEqualsSelf"],
					[[0, 1], "EqualsSelf"],
					[[-1, 0], "EqualsSelf"],
					[[1, 0], "EqualsSelf"],
					[[1, 1], "NotEqualsSelf"],
					[[-1, 1], "EqualsSelf"]
					],
					"haltOnMatch" : true,
					"pieces" : [["PSER", [0, 0]]]
				}
			]
		]
	]
}